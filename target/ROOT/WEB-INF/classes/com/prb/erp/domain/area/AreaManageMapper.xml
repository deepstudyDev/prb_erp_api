<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper  
        PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd"> 
 
<mapper namespace="com.prb.erp.domain.area.AreaManageMapper">
    <select id="getAreaList" resultType="areaManageVO" parameterType="hashMap" statementType="PREPARED">   
    	DECLARE @RowsPerPage INT = 100, @PageNumber INT = #{map.pageNumber}
    	SELECT * FROM (
			SELECT   A.AREA_CD areaCd,
			         A.AREA_NM areaNm,
			         A.LOCATION_CD locationCd,
			         DBO.FN_BASECODE('LOCATION_CD',A.LOCATION_CD,'') locationCdNm,
			         A.AREA_ZIPCODE areaZipcode,
			         A.AREA_ADDRESS1 areaAddress1,
			         A.AREA_ADDRESS2 areaAddress2,
			         A.AREA_TEL_NO areaTelNo,
			         A.AREA_AS_TEL_NO areaAsTelNo,
			         A.AREA_FAX_NO areaFaxNo,
			         A.COMPANY_REG_NUM companyRegNum,
			         A.REMARK remark,
			         A.CREATED_AT createdAt,
			         A.CREATED_BY createdBy,
			         A.UPDATED_AT updatedAt,
			         A.UPDATED_BY updatedBy,
			         B.USER_CD regUserCd,
			         B.USER_NM regUserNm,
			         CONVERT(CHAR(10), A.UPDATED_AT, 23) regDt,
			         ROW_NUMBER() OVER (ORDER BY A.UPDATED_AT ASC) AS RowNum,
			         ROW_NUMBER() OVER (ORDER BY A.UPDATED_AT DESC) AS RowNum2
			FROM     TB_ERP_AREA000 A
			         INNER JOIN TB_ERP_USER000 B
			         ON       A.UPDATED_BY = B.USER_CD
			WHERE    1                     =1
        
			<!-- 지역사코드 -->				
			<if test="map.areaCd != null and map.areaCd != ''">  
					AND A.AREA_CD = #{map.areaCd}
			</if>      
			) AS SOD
	   
		WHERE SOD.RowNum2 BETWEEN ((@PageNumber-1)*@RowsPerPage)+1
		AND @RowsPerPage*(@PageNumber)
    </select>
    
    <!-- count -->
    <select id="getAreaListCount" resultType="java.lang.Integer" parameterType="hashMap" statementType="PREPARED">  
			SELECT    COUNT(1)
			FROM     TB_ERP_AREA000 A
			         INNER JOIN TB_ERP_USER000 B
			         ON       A.UPDATED_BY = B.USER_CD
			WHERE    1                     =1
        
			<!-- 지역사코드 -->				
			<if test="map.areaCd != null and map.areaCd != ''">  
					AND A.AREA_CD = #{map.areaCd}
			</if>      
    </select>
    
    <select id="getArea" resultType="areaManageVO" parameterType="hashMap" statementType="PREPARED">   
			SELECT   A.AREA_CD areaCd,
			         A.AREA_NM areaNm,
			         A.LOCATION_CD locationCd,
			         DBO.FN_BASECODE('LOCATION_CD',A.LOCATION_CD,'') locationCdNm,
			         A.AREA_ZIPCODE areaZipcode,
			         A.AREA_ADDRESS1 areaAddress1,
			         A.AREA_ADDRESS2 areaAddress2,
			         A.AREA_TEL_NO areaTelNo,
			         A.AREA_AS_TEL_NO areaAsTelNo,
			         A.AREA_FAX_NO areaFaxNo,
			         A.COMPANY_REG_NUM companyRegNum,
			         A.REMARK remark,
			         A.CREATED_AT createdAt,
			         A.CREATED_BY createdBy,
			         A.UPDATED_AT updatedAt,
			         A.UPDATED_BY updatedBy,
			         B.USER_CD regUserCd,
			         B.USER_NM regUserNm,
			         CONVERT(CHAR(10), A.UPDATED_AT, 23) regDt,
			         ROW_NUMBER() OVER (ORDER BY A.UPDATED_AT) AS RowNum
			FROM     TB_ERP_AREA000 A
			         INNER JOIN TB_ERP_USER000 B
			         ON       A.UPDATED_BY = B.USER_CD
			WHERE    1                     =1
        
			<!-- 지역사코드 -->				
			<if test="map.areaCd != null and map.areaCd != ''">  
					AND A.AREA_CD = #{map.areaCd}
			</if>      
    </select>
    
    <!-- 전체조회 페이징없이 -->
    <select id="getAreaListAll" resultType="areaManageVO" parameterType="hashMap" statementType="PREPARED">   
			SELECT   A.AREA_CD areaCd,
			         A.AREA_NM areaNm,
			         A.LOCATION_CD locationCd,
			         DBO.FN_BASECODE('LOCATION_CD',A.LOCATION_CD,'') locationCdNm,
			         A.AREA_ZIPCODE areaZipcode,
			         A.AREA_ADDRESS1 areaAddress1,
			         A.AREA_ADDRESS2 areaAddress2,
			         A.AREA_TEL_NO areaTelNo,
			         A.AREA_AS_TEL_NO areaAsTelNo,
			         A.AREA_FAX_NO areaFaxNo,
			         A.COMPANY_REG_NUM companyRegNum,
			         A.REMARK remark,
			         A.CREATED_AT createdAt,
			         A.CREATED_BY createdBy,
			         A.UPDATED_AT updatedAt,
			         A.UPDATED_BY updatedBy,
			         B.USER_CD regUserCd,
			         B.USER_NM regUserNm,
			         CONVERT(CHAR(10), A.UPDATED_AT, 23) regDt,
			         ROW_NUMBER() OVER (ORDER BY A.UPDATED_AT) AS RowNum
			FROM     TB_ERP_AREA000 A
			         INNER JOIN TB_ERP_USER000 B
			         ON       A.UPDATED_BY = B.USER_CD
			WHERE    1                     =1
        
			<!-- 지역사코드 -->				
			<if test="map.areaCd != null and map.areaCd != ''">  
					AND A.AREA_CD = #{map.areaCd}
			</if>      
    </select>
</mapper>
