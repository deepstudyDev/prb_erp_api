<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper
        PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
   
<mapper namespace="com.prb.erp.domain.user.UserMapper"> 
 	<!-- 사용자 조회 -->
    <select id="getUserList" resultType="userVO" parameterType="hashMap" statementType="PREPARED">   
    	DECLARE @RowsPerPage INT = 10, @PageNumber INT = #{map.pageNumber}
    	SELECT * FROM (
			SELECT   A.USER_TYPE userType,
			         DBO.FN_BASECODE('USER_TYPE',A.USER_TYPE,'') userTypeNm,
			         A.DECISION_YN decisionYn,
			         A.USER_CD userCd,
			         A.USER_NM userNm,
			         A.USER_PS userPs,
			         A.USER_PS2 userPs2,
			         A.AREA_CD areaCd,
			         (SELECT Z.AREA_NM FROM TB_ERP_AREA000 Z WHERE Z.AREA_CD = A.AREA_CD) areaNm,
			         A.ORG_CLASS orgClass,
			         A.ORG_CD orgCd,
			         (SELECT Z.ORG_NM FROM TB_ERP_AREA100 Z WHERE Z.ORG_CD = A.ORG_CD AND Z.ORG_CLASS = A.ORG_CLASS) orgNm,   
			         A.RANK_CD rankCd,
					 DBO.FN_BASECODE('RANK_CD',A.RANK_CD,'') rankCdNm,
			         A.HP_NO hpNo,
			         A.TEL_NO telNo,
			         A.BIRTHDAY birthday,
			         A.JOIN_DT joinDt,
			         A.OUT_DT outDt,
			         A.MARRIAGE_YN marriageYn,
			         DBO.FN_BASECODE('MARRIAGE_YN',A.MARRIAGE_YN,'') marriageYnNm,
			         A.CHILDREN_YN childrenYn ,
			         DBO.FN_BASECODE('CHILDREN_YN',A.CHILDREN_YN,'') childrenYnNm,
			         A.EMERGENCY_NM emergencyNm,
			         A.EMERGENCY_TEL emergencyTel,
			         A.ZIPCODE zipcode,
			         A.ADDRESS1 address1,
			         A.ADDRESS2 address2,
			         A.USER_STATUS userStatus,
			         DBO.FN_BASECODE('USER_STATUS',A.USER_STATUS,'') userStatusNm,
			         A.ID_STATUS idStatus,
			         DBO.FN_BASECODE('ID_STATUS',A.ID_STATUS,'') idStatusNm,
			         A.LAST_LOGIN_DATE lastLoginDate,
			         A.LOCALE locale,
			         A.MENU_GRP_CD menuGrpCd,
			         A.GRP_AUTH_CD grpAuthCd,
			         A.USE_YN useYn,
			         
					 ( SELECT DBO.FN_BASECODE('AUTH_GROUP',T.GRP_AUTH_CD,'') + ' ' AS [text()]
						 FROM    TB_ERP_USER050 T
						 WHERE   T.USER_CD = A.USER_CD
						 FOR XML PATH ('')
					 ) AS grpAuthCdNm,
					 
			         A.CREATED_AT createdAt,
			         A.CREATED_BY createdBy,
			         A.UPDATED_AT updatedAt,
			         A.UPDATED_BY updatedBy,
			         B.USER_CD regUserCd,
			         B.USER_NM regUserNm,
			         CONVERT(CHAR(10), A.UPDATED_AT, 23) regDt,
			         ROW_NUMBER() OVER (ORDER BY A.UPDATED_AT ASC) AS RowNum,
			         ROW_NUMBER() OVER (ORDER BY A.UPDATED_AT DESC) AS RowNum2
			FROM     TB_ERP_USER000 A
			         INNER JOIN TB_ERP_USER000 B
			         ON       A.UPDATED_BY = B.USER_CD
			WHERE    1 = 1
			
			<!-- SMS 대상 회원 -->
			<if test="map.smsUserFlag != null and map.smsUserFlag != '' and map.smsUserFlag eq 'Y'.toString()">  	
					AND A.USER_TYPE NOT IN ('10','20')
			</if>       
			
			<!-- 사용자유형 -->
			<if test="map.userType != null and map.userType != ''">  
					AND A.USER_TYPE = #{map.userType}
			</if>      
			
			<!-- 아이디 -->
			<if test="map.userCd != null and map.userCd != ''">  
					AND A.USER_CD = #{map.userCd}
			</if>       
			
			<!-- 이름 -->
			<if test="map.userCd != null and map.userCd != ''">  
					AND A.USER_NM = #{map.userNm}
			</if>      
			
			<!-- 휴대폰 -->
			<if test="map.hpNo != null and map.hpNo != ''">  
					AND A.HP_NO = #{map.hpNo}
			</if>       
			
			<!-- 회원구분 -->
			<if test="map.userType != null and map.userType != ''">  
					AND A.USER_TYPE = #{map.userType}
			</if>    
			   
			<!-- 지역사 -->
			<if test="map.areaCd != null and map.areaCd != ''">  
					AND A.AREA_CD = #{map.areaCd}
			</if>       
			
			<!-- 조직 -->
			<if test="map.orgCd != null and map.orgCd != ''">  			
					AND A.ORG_CD IN (SELECT ORG_CD from DBO.FN_ORGCD(#{map.orgCd}))
			</if>       			
			
			<!-- 직급 -->
			<if test="map.rankCd != null and map.rankCd != ''">  
					AND A.RANK_CD = #{map.rankCd}
			</if>    
			 
			
			<!-- 이름 -->
			<if test="map.searchType != null and map.searchType != '' and map.searchType eq '10'.toString() and map.searchText != null and map.searchText != ''">  
					<![CDATA[  
		      			AND   A.USER_NM LIKE UPPER('%'+#{map.searchText}+'%')
		  			]]>
			</if>       
	        	
			<!-- 휴대전화 -->
			<if test="map.searchType != null and map.searchType != '' and map.searchType eq '20'.toString() and map.searchText != null and map.searchText != ''">  
					<![CDATA[  
		      			AND   REPLACE(A.HP_NO,'-','') LIKE UPPER('%'+#{map.searchText}+'%')
		  			]]>
			</if>       
	        	
			<!-- 아이디 -->
			<if test="map.searchType != null and map.searchType != '' and map.searchType eq '30'.toString() and map.searchText != null and map.searchText != ''">  
					<![CDATA[  
		      			AND   A.USER_CD LIKE UPPER('%'+#{map.searchText}+'%')
		  			]]>
			</if>
			  
			
			) AS SOD
	   
		WHERE SOD.RowNum2 BETWEEN ((@PageNumber-1)*@RowsPerPage)+1
		AND @RowsPerPage*(@PageNumber)
    </select>
    
    <!-- 사용자 조회 -->
    <select id="getUserListCount" resultType="java.lang.Integer" parameterType="hashMap" statementType="PREPARED">   
			SELECT   COUNT(1)
			FROM     TB_ERP_USER000 A
			         INNER JOIN TB_ERP_USER000 B
			         ON       A.UPDATED_BY = B.USER_CD
			WHERE    1 = 1
			
			<!-- SMS 대상 회원 -->
			<if test="map.smsUserFlag != null and map.smsUserFlag != '' and map.smsUserFlag eq 'Y'.toString()">  
					AND A.USER_TYPE NOT IN ('10','20')
			</if>       
			
			<!-- 사용자유형 -->
			<if test="map.userType != null and map.userType != ''">  
					AND A.USER_TYPE = #{map.userType}
			</if>      
						
			<!-- 아이디 -->
			<if test="map.userCd != null and map.userCd != ''">  
					AND A.USER_CD = #{map.userCd}
			</if>       
			
			<!-- 이름 -->
			<if test="map.userCd != null and map.userCd != ''">  
					AND A.USER_NM = #{map.userNm}
			</if>      
			
			<!-- 휴대폰 -->
			<if test="map.hpNo != null and map.hpNo != ''">  
					AND A.HP_NO = #{map.hpNo}
			</if>       
			
			<!-- 회원구분 -->
			<if test="map.userType != null and map.userType != ''">  
					AND A.USER_TYPE = #{map.userType}
			</if>       
			
			<!-- 지역사 -->
			<if test="map.areaCd != null and map.areaCd != ''">  
					AND A.AREA_CD = #{map.areaCd}
			</if>       
			
			<!-- 조직 -->
			<if test="map.orgCd != null and map.orgCd != ''">  			
					AND A.ORG_CD IN (SELECT ORG_CD from DBO.FN_ORGCD(#{map.orgCd}))
			</if>       			
			
			<!-- 직급 -->
			<if test="map.rankCd != null and map.rankCd != ''">  
					AND A.RANK_CD = #{map.rankCd}
			</if>    
			 
			
			<!-- 이름 -->
			<if test="map.searchType != null and map.searchType != '' and map.searchType eq '10'.toString() and map.searchText != null and map.searchText != ''">  
					<![CDATA[  
		      			AND   A.USER_NM LIKE UPPER('%'+#{map.searchText}+'%')
		  			]]>
			</if>       
	        	
			<!-- 휴대전화 -->
			<if test="map.searchType != null and map.searchType != '' and map.searchType eq '20'.toString() and map.searchText != null and map.searchText != ''">  
					<![CDATA[  
		      			AND   REPLACE(A.HP_NO,'-','') LIKE UPPER('%'+#{map.searchText}+'%')
		  			]]>
			</if>       
	        	
			<!-- 아이디 -->
			<if test="map.searchType != null and map.searchType != '' and map.searchType eq '30'.toString() and map.searchText != null and map.searchText != ''">  
					<![CDATA[  
		      			AND   A.USER_CD LIKE UPPER('%'+#{map.searchText}+'%')
		  			]]>
			</if>       
    </select>
    
    
    <!-- 로그인한 사용자 단건 가져오기 -->
    <select id="getLoginUser" resultType="userVO" parameterType="hashMap" statementType="PREPARED">   
			SELECT   A.USER_TYPE userType,
			         DBO.FN_BASECODE('USER_TYPE',A.USER_TYPE,'') userTypeNm,
			         A.DECISION_YN decisionYn,
			         A.USER_CD userCd,
			         A.USER_NM userNm,
			         A.USER_PS userPs,
			         A.USER_PS2 userPs2,
			         A.AREA_CD areaCd,
			         (SELECT Z.AREA_NM FROM TB_ERP_AREA000 Z WHERE Z.AREA_CD = A.AREA_CD) areaNm,
			         A.ORG_CLASS orgClass,
			         A.ORG_CD orgCd,
			         (SELECT Z.ORG_NM FROM TB_ERP_AREA100 Z WHERE Z.ORG_CD = A.ORG_CD AND Z.ORG_CLASS = A.ORG_CLASS) orgNm,			 
			         A.RANK_CD rankCd,
					 DBO.FN_BASECODE('RANK_CD',A.RANK_CD,'') rankCdNm,
			         A.HP_NO hpNo,
			         A.TEL_NO telNo,
			         A.BIRTHDAY birthday,
			         A.JOIN_DT joinDt,
			         A.OUT_DT outDt,
			         A.MARRIAGE_YN marriageYn,
			         DBO.FN_BASECODE('MARRIAGE_YN',A.MARRIAGE_YN,'') marriageYnNm,
			         A.CHILDREN_YN childrenYn ,
			         DBO.FN_BASECODE('CHILDREN_YN',A.CHILDREN_YN,'') childrenYnNm,
			         A.EMERGENCY_NM emergencyNm,
			         A.EMERGENCY_TEL emergencyTel,
			         A.ZIPCODE zipcode,
			         A.ADDRESS1 address1,
			         A.ADDRESS2 address2,
			         A.USER_STATUS userStatus,
			         DBO.FN_BASECODE('USER_STATUS',A.USER_STATUS,'') userStatusNm,
			         A.ID_STATUS idStatus,
			         DBO.FN_BASECODE('ID_STATUS',A.ID_STATUS,'') idStatusNm,
			         A.LAST_LOGIN_DATE lastLoginDate,
			         A.LOCALE locale,
			         A.MENU_GRP_CD menuGrpCd,
			         A.GRP_AUTH_CD grpAuthCd,
			         A.USE_YN useYn,
			         CONVERT(CHAR(10), A.UPDATED_AT, 23) regDt,
			         ROW_NUMBER() OVER (ORDER BY A.UPDATED_AT) AS RowNum
			FROM     TB_ERP_USER000 A
			WHERE    1 = 1
			
			<!-- 아이디 -->
			<if test="map.userCd != null and map.userCd != ''">  
					AND A.USER_CD = #{map.userCd}
			</if>    
			<!-- TYPE -->
			<if test="map.userType != null and map.userType != ''">  
					AND A.USER_TYPE = #{map.userType}
			</if>    
    </select>
    
    <!-- 사용자 조회 -->
    <select id="getUser" resultType="userVO" parameterType="hashMap" statementType="PREPARED">   
			SELECT   A.USER_TYPE userType,
			         DBO.FN_BASECODE('USER_TYPE',A.USER_TYPE,'') userTypeNm,
			         A.DECISION_YN decisionYn,
			         A.USER_CD userCd,
			         A.USER_NM userNm,
			         A.USER_PS userPs,
			         A.USER_PS2 userPs2,
			         A.AREA_CD areaCd,
			         (SELECT Z.AREA_NM FROM TB_ERP_AREA000 Z WHERE Z.AREA_CD = A.AREA_CD) areaNm,
			         A.ORG_CLASS orgClass,
			         A.ORG_CD orgCd,
			         (SELECT Z.ORG_NM FROM TB_ERP_AREA100 Z WHERE Z.ORG_CD = A.ORG_CD AND Z.ORG_CLASS = A.ORG_CLASS) orgNm,   
			         A.RANK_CD rankCd,
					 DBO.FN_BASECODE('RANK_CD',A.RANK_CD,'') rankCdNm,
			         A.HP_NO hpNo,
			         A.TEL_NO telNo,
			         A.BIRTHDAY birthday,
			         A.JOIN_DT joinDt,
			         A.OUT_DT outDt,
			         A.MARRIAGE_YN marriageYn,
			         DBO.FN_BASECODE('MARRIAGE_YN',A.MARRIAGE_YN,'') marriageYnNm,
			         A.CHILDREN_YN childrenYn ,
			         DBO.FN_BASECODE('CHILDREN_YN',A.CHILDREN_YN,'') childrenYnNm,
			         A.EMERGENCY_NM emergencyNm,
			         A.EMERGENCY_TEL emergencyTel,
			         A.ZIPCODE zipcode,
			         A.ADDRESS1 address1,
			         A.ADDRESS2 address2,
			         A.USER_STATUS userStatus,
			         DBO.FN_BASECODE('USER_STATUS',A.USER_STATUS,'') userStatusNm,
			         A.ID_STATUS idStatus,
			         DBO.FN_BASECODE('ID_STATUS',A.ID_STATUS,'') idStatusNm,
			         A.LAST_LOGIN_DATE lastLoginDate,
			         A.LOCALE locale,
			         A.MENU_GRP_CD menuGrpCd,
			         A.GRP_AUTH_CD grpAuthCd,
			         A.USE_YN useYn,
			         A.CREATED_AT createdAt,
			         A.CREATED_BY createdBy,
			         A.UPDATED_AT updatedAt,
			         A.UPDATED_BY updatedBy,
			         B.USER_CD regUserCd,
			         B.USER_NM regUserNm,
			         CONVERT(CHAR(10), A.UPDATED_AT, 23) regDt,
			         ROW_NUMBER() OVER (ORDER BY A.UPDATED_AT ASC) AS RowNum,
			         ROW_NUMBER() OVER (ORDER BY A.UPDATED_AT DESC) AS RowNum2
			FROM     TB_ERP_USER000 A
			         INNER JOIN TB_ERP_USER000 B
			         ON       A.UPDATED_BY = B.USER_CD
			WHERE    1 = 1
			
			
			<!-- 아이디 -->
			<if test="map.userCd != null and map.userCd != ''">  
					AND A.USER_CD = #{map.userCd}
			</if>   
    </select>
</mapper>
