<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper
        PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
  
<mapper namespace="com.prb.erp.domain.item.goods.GoodsManageMapper">
 
 	<!-- 상품조회 -->
    <select id="getGoodsManageList" resultType="goodsManageVO" parameterType="hashMap" statementType="PREPARED">   
    	DECLARE @RowsPerPage INT = 10, @PageNumber INT = #{map.pageNumber}
    	SELECT * FROM (
		SELECT 	   A.GOODS_CD goodsCd,
			       A.GOODS_NM goodsNm, 
			       A.SALES_TYPE salesType,
			       DBO.FN_BASECODE('SALES_TYPE',A.SALES_TYPE,'') salesTypeNm,
			       A.AGREEMENT_CD agreementCd,
			       DBO.FN_BASECODE('AGREEMENT_CD',A.AGREEMENT_CD,'') agreementCdNm,
			       A.GOODS_CLASS goodsClass,
			       DBO.FN_BASECODE('GOODS_CLASS',A.GOODS_CLASS,'') goodsClassNm,
			       A.GOODS_STEP1 goodsStep1,
			       DBO.FN_BASECODE('ITEM_STEP1',A.GOODS_STEP1,'') goodsStep1Nm,
			       A.GOODS_STEP2 goodsStep2,
			       DBO.FN_BASECODE('ITEM_STEP1',A.GOODS_STEP2,'') goodsStep2Nm,				   
			       A.SALES_YN salesYn,
			       DBO.FN_BASECODE('SALES_YN',A.SALES_YN,'') salesYnNm,
			       A.GOODS_STATUS goodsStatus,
			       DBO.FN_BASECODE('GOODS_STATUS',A.GOODS_STATUS,'') goodsStatusNm,
			       RTRIM(
				   (CASE WHEN A.BOOK_SERVICE_YN = 'Y' THEN '전집 ' ELSE '' END) + 
				   (CASE WHEN A.ONLINE_SERVICE_YN = 'Y' THEN '온라인컨텐츠 ' ELSE '' END) + 
				   (CASE WHEN A.VISIT_SERVICE_YN = 'Y' THEN '방문교사수업 ' ELSE '' END) + 
				   (CASE WHEN A.ETC_SERVICE_YN = 'Y' THEN '부가상품 '  ELSE '' END))  goodsCategoryNm,				  
				
				   (
					SELECT DBO.FN_BASECODE('PRODUCT_TYPE',T.GOODS_CATEGORY_CD,'') + ' ' AS [text()]
					FROM TB_ERP_GOODS050 T
					WHERE T.GOODS_CD = A.GOODS_CD
					AND T.GOODS_CATEGORY_TYPE = 'BOOK'
					FOR XML PATH ('')
					) goodsSubjectNm,
					
				   A.SALES_COST_PRICE salesCostPrice,
				   A.SALES_PRICE salesPrice,				   				   
				   A.BOOK_SERVICE_YN bookServiceYn,				   
				   A.ONLINE_SERVICE_YN onlineServiceYn,
				   A.VISIT_SERVICE_YN visitServiceYn,
				   A.ETC_SERVICE_YN etcServiceYn,				   
				   A.BOOK_SERVICE_COST_PRICE bookServiceCostPrice,
				   A.BOOK_SERVICE_PRICE bookServicePrice,
				   A.ONLINE_SERVICE_COST_PRICE onlineServiceCostPrice,
				   A.ONLINE_SERVICE_PRICE onlineServicePrice,
				   A.VISIT_SERVICE_COST_PRICE visitServiceCostPrice,
				   A.VISIT_SERVICE_PRICE visitServicePrice,
				   A.ETC_SERVICE_COST_PRICE etcServiceCostPrice,
				   A.ETC_SERVICE_PRICE etcServicePrice,
				   
				   A.VISIT_NUMBER_CD visitNumberCd,
				   DBO.FN_BASECODE('VISIT_NUMBER_CD',A.VISIT_NUMBER_CD,'') visitNumberCdNm,
				   A.VISIT_TIME_CD visitTimeCd,
				   DBO.FN_BASECODE('VISIT_TIME_CD',A.VISIT_TIME_CD,'') visitTimeCdNm,
				   
			       B.USER_CD regUserCd,
			       B.USER_NM regUserNm,
			       CONVERT(CHAR(10), A.UPDATED_AT, 23) regDt,
	   			   ROW_NUMBER() OVER (ORDER BY A.UPDATED_AT ASC) AS RowNum,
	   			   ROW_NUMBER() OVER (ORDER BY A.UPDATED_AT DESC) AS RowNum2
			FROM   TB_ERP_GOODS000 A
			       INNER JOIN TB_ERP_USER000 B
			       ON     A.UPDATED_BY = B.USER_CD
			WHERE 1=1
			
			
			<!-- 상품코드 -->				
			<if test="map.goodsCd != null and map.goodsCd != ''">  
					AND A.GOODS_CD = #{map.goodsCd}
			</if>      
			<!-- 판매여부 -->				 
			<if test="map.salesYn != null and map.salesYn != ''">  
					AND A.SALES_YN = #{map.salesYn}
			</if>       
			<!-- 상품분류 -->			
			<if test="map.goodsClass != null and map.goodsClass != ''">  
					AND A.GOODS_CLASS = #{map.goodsClass}
			</if>       
			
			<!-- 상품명 -->			
			<if test="map.searchType != null and map.searchType != '' and map.searchType eq '10'.toString() and map.searchText != null and map.searchText != ''">  
					<![CDATA[  
		      			AND   A.GOODS_NM LIKE UPPER('%'+#{map.searchText}+'%')
		  			]]>
			</if>    
			<!-- 상품코드 -->			
			<if test="map.searchType != null and map.searchType != '' and map.searchType eq '20'.toString() and map.searchText != null and map.searchText != ''">  
					<![CDATA[  
		      			AND   A.GOODS_CD LIKE UPPER('%'+#{map.searchText}+'%')
		  			]]>
			</if>       
			
			) AS SOD
	   
		WHERE SOD.RowNum2 BETWEEN ((@PageNumber-1)*@RowsPerPage)+1
		AND @RowsPerPage*(@PageNumber)
    </select>
    
    <!-- 상품조회 -->
    <select id="getGoodsManageListCount" resultType="java.lang.Integer" parameterType="hashMap" statementType="PREPARED">   
		SELECT 	   COUNT(1)
			FROM   TB_ERP_GOODS000 A
			       INNER JOIN TB_ERP_USER000 B
			       ON     A.UPDATED_BY = B.USER_CD
			WHERE 1=1
			
			
			<!-- 상품코드 -->				
			<if test="map.goodsCd != null and map.goodsCd != ''">  
					AND A.GOODS_CD = #{map.goodsCd}
			</if>      
			<!-- 판매여부 -->				 
			<if test="map.salesYn != null and map.salesYn != ''">  
					AND A.SALES_YN = #{map.salesYn}
			</if>       
			<!-- 상품분류 -->			
			<if test="map.goodsClass != null and map.goodsClass != ''">  
					AND A.GOODS_CLASS = #{map.goodsClass}
			</if>       
			
			<!-- 상품명 -->			
			<if test="map.searchType != null and map.searchType != '' and map.searchType eq '10'.toString() and map.searchText != null and map.searchText != ''">  
					<![CDATA[  
		      			AND   A.GOODS_NM LIKE UPPER('%'+#{map.searchText}+'%')
		  			]]>
			</if>    
			<!-- 상품코드 -->			
			<if test="map.searchType != null and map.searchType != '' and map.searchType eq '20'.toString() and map.searchText != null and map.searchText != ''">  
					<![CDATA[  
		      			AND   A.GOODS_CD LIKE UPPER('%'+#{map.searchText}+'%')
		  			]]>
			</if>    
    </select>
    
    <!-- 상품조회 전체 -->
    <select id="getGoodsManageListAll" resultType="goodsManageVO" parameterType="hashMap" statementType="PREPARED">   
		SELECT 	   A.GOODS_CD goodsCd,
			       A.GOODS_NM goodsNm, 
			       A.SALES_TYPE salesType,
			       DBO.FN_BASECODE('SALES_TYPE',A.SALES_TYPE,'') salesTypeNm,
			       A.AGREEMENT_CD agreementCd,
			       DBO.FN_BASECODE('AGREEMENT_CD',A.AGREEMENT_CD,'') agreementCdNm,
			       A.GOODS_CLASS goodsClass,
			       DBO.FN_BASECODE('GOODS_CLASS',A.GOODS_CLASS,'') goodsClassNm,
			       A.GOODS_STEP1 goodsStep1,
			       DBO.FN_BASECODE('ITEM_STEP1',A.GOODS_STEP1,'') goodsStep1Nm,
			       A.GOODS_STEP2 goodsStep2,
			       DBO.FN_BASECODE('ITEM_STEP1',A.GOODS_STEP2,'') goodsStep2Nm,				   
			       A.SALES_YN salesYn,
			       DBO.FN_BASECODE('SALES_YN',A.SALES_YN,'') salesYnNm,
			       A.GOODS_STATUS goodsStatus,
			       DBO.FN_BASECODE('GOODS_STATUS',A.GOODS_STATUS,'') goodsStatusNm,
			       RTRIM(
				   (CASE WHEN A.BOOK_SERVICE_YN = 'Y' THEN '전집 ' ELSE '' END) + 
				   (CASE WHEN A.ONLINE_SERVICE_YN = 'Y' THEN '온라인컨텐츠 ' ELSE '' END) + 
				   (CASE WHEN A.VISIT_SERVICE_YN = 'Y' THEN '방문교사수업 ' ELSE '' END) + 
				   (CASE WHEN A.ETC_SERVICE_YN = 'Y' THEN '부가상품 '  ELSE '' END))  goodsCategoryNm,				  
				
				   (
					SELECT DBO.FN_BASECODE('PRODUCT_TYPE',T.GOODS_CATEGORY_CD,'') + ' ' AS [text()]
					FROM TB_ERP_GOODS050 T
					WHERE T.GOODS_CD = A.GOODS_CD
					AND T.GOODS_CATEGORY_TYPE = 'BOOK'
					FOR XML PATH ('')
					) goodsSubjectNm,
					
				   A.SALES_COST_PRICE salesCostPrice,
				   A.SALES_PRICE salesPrice,				   				   
				   A.BOOK_SERVICE_YN bookServiceYn,				   
				   A.ONLINE_SERVICE_YN onlineServiceYn,
				   A.VISIT_SERVICE_YN visitServiceYn,
				   A.ETC_SERVICE_YN etcServiceYn,				   
				   A.BOOK_SERVICE_COST_PRICE bookServiceCostPrice,
				   A.BOOK_SERVICE_PRICE bookServicePrice,
				   A.ONLINE_SERVICE_COST_PRICE onlineServiceCostPrice,
				   A.ONLINE_SERVICE_PRICE onlineServicePrice,
				   A.VISIT_SERVICE_COST_PRICE visitServiceCostPrice,
				   A.VISIT_SERVICE_PRICE visitServicePrice,
				   A.ETC_SERVICE_COST_PRICE etcServiceCostPrice,
				   A.ETC_SERVICE_PRICE etcServicePrice,
				   
				   A.VISIT_NUMBER_CD visitNumberCd,
				   DBO.FN_BASECODE('VISIT_NUMBER_CD',A.VISIT_NUMBER_CD,'') visitNumberCdNm,
				   A.VISIT_TIME_CD visitTimeCd,
				   DBO.FN_BASECODE('VISIT_TIME_CD',A.VISIT_TIME_CD,'') visitTimeCdNm,
				   
			       B.USER_CD regUserCd,
			       B.USER_NM regUserNm,
			       CONVERT(CHAR(10), A.UPDATED_AT, 23) regDt,
	   			   ROW_NUMBER() OVER (ORDER BY A.UPDATED_AT) AS RowNum
			FROM   TB_ERP_GOODS000 A
			       INNER JOIN TB_ERP_USER000 B
			       ON     A.UPDATED_BY = B.USER_CD
			WHERE 1=1
			
			
			<!-- 상품코드 -->				
			<if test="map.goodsCd != null and map.goodsCd != ''">  
					AND A.GOODS_CD = #{map.goodsCd}
			</if>      
			<!-- 판매여부 -->				 
			<if test="map.salesYn != null and map.salesYn != ''">  
					AND A.SALES_YN = #{map.salesYn}
			</if>       
			<!-- 상품분류 -->			
			<if test="map.goodsClass != null and map.goodsClass != ''">  
					AND A.GOODS_CLASS = #{map.goodsClass}
			</if>       
			
			<!-- 상품명 -->			
			<if test="map.searchType != null and map.searchType != '' and map.searchType eq '10'.toString() and map.searchText != null and map.searchText != ''">  
					<![CDATA[  
		      			AND   A.GOODS_NM LIKE UPPER('%'+#{map.searchText}+'%')
		  			]]>
			</if>    
			<!-- 상품코드 -->			
			<if test="map.searchType != null and map.searchType != '' and map.searchType eq '20'.toString() and map.searchText != null and map.searchText != ''">  
					<![CDATA[  
		      			AND   A.GOODS_CD LIKE UPPER('%'+#{map.searchText}+'%')
		  			]]>
			</if> 
    </select>
</mapper>
